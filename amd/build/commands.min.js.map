{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["import {component} from './common';\nimport {get_string as getString} from 'core/str';\n\nimport {getCourseId, getUbicastURL, useFilter} from \"./options\";\n\n/**\n * Add a correction on the current selection.\n * @param {tinyMCE} editor\n * @returns {void}\n */\nasync function insertMedia(editor) {\n    const courseid = getCourseId(editor);\n    const usefilter = useFilter(editor) === '1';\n    const ubicastURL = getUbicastURL(editor);\n    const [\n        panelTitle,\n    ] = await Promise.all([\n        getString('pluginname', component),\n    ]);\n\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n            //Create iframe content\n            const formId = 'id_resource_atto_ubicast_' + new Date().getTime();\n            const content = Y.Node.create(this.responseText);\n            content.set('id', formId);\n            const fieldset = content.one('fieldset');\n            if (fieldset) {\n                // The fieldset can be null with Moodle < 4.0\n                fieldset.setStyle('overflow', 'auto');\n                fieldset.setStyle('padding', '20px');\n                fieldset.setStyle('max-height', 0.7 * window.innerHeight);\n            }\n\n            editor.windowManager.open({\n                title: panelTitle,\n                body: {\n                    type: 'panel',\n                    items: [\n                        {\n                            type: 'htmlpanel',\n                            html: '<div id=\"ubicast_content\"></div>'\n                        },\n                    ]\n                },\n                buttons: [\n                    {\n                        type: 'cancel',\n                        text: 'Close'\n                    },\n                    {\n                        type: 'submit',\n                        text: 'Save',\n                        buttonType: 'primary'\n                    }\n                ],\n                onSubmit: (api) => {\n                    const video_link = create_video_link(courseid, usefilter, ubicastURL);\n                    editor.insertContent(video_link);\n                    api.close();\n                }\n            });\n            Y.one('#ubicast_content').insert(content);\n            setTimeout(function () {\n                // Use setTimeout to wait for MediaSelector loading.\n                window.mediaSelector = new window.MediaSelector({\n                    moodleURL: window.M.cfg.wwwroot + '/mod/ubicast/lti.php?id=' + courseid,\n                    nudgisURL: ubicastURL,\n                    filterBySpeaker: true,\n                    target: formId\n                });\n            }, (window.MediaSelector ? 10 : 2000));\n        }\n    };\n    xhttp.open('GET', window.M.cfg.wwwroot + '/lib/editor/atto/plugins/ubicast/media.php', true);\n    xhttp.send();\n}\n\n\nexport const getSetup = async () => {\n    const [\n        insertButtonName,\n    ] = await Promise.all([\n        getString('inputsubmit', component),\n    ]);\n\n    return (editor) => {\n        // Register the insert media Toolbar Button.\n        editor.ui.registry.addButton('insert_media', {\n            icon: 'user',\n            tooltip: insertButtonName,\n            onAction: () => insertMedia(editor)\n        });\n    };\n};\n\n/**\n * Function to retrieve the course id from the current page.\n *\n * @method create_video_link\n * @param {number} course_id The course id.\n * @param {boolean} use_filter The use filter option.\n * @param {string} ubicast_url The ubicast url.\n * @return {string} The cource id.\n * @private\n */\nexport function create_video_link(course_id, use_filter, ubicast_url) {\n\n    const media_id = document.getElementById('id_mediaid').value;\n    const media_width = document.getElementById('id_mediawidth').value;\n    const media_height = document.getElementById('id_mediaheight').value;\n    const media_thumb = document.getElementById('id_mediaimg').value || '/static/mediaserver/images/video.svg';\n\n    let video_url = '';\n    if (media_id) {\n        if (use_filter) {\n            const thumb_url = ubicast_url + media_thumb;\n            video_url = '<img class=\"atto_ubicast courseid_' + course_id + '_mediaid_'\n                + media_id + '\" style=\"display: block; width: '\n                + media_width + '; height: ' + media_height + ';\"' + ' src=\"' + thumb_url + '\" alt=\"\"/>';\n        } else {\n            const url = '/lib/editor/atto/plugins/ubicast/view.php?course=' + course_id + ' &video= + ' + media_id;\n            video_url = '<iframe class=\"nudgis-iframe\" ' +\n                'style=\"width:' + media_width + '; height: ' + media_height + '; background-color: #ddd;\" ' +\n                'src=\"' + window.M.cfg.wwwroot + url + '\" ' +\n                ' allow=\"autoplay; encrypted-media\" allowfullscreen=\"allowfullscreen\">' +\n                '</iframe>';\n        }\n    }\n\n    return video_url;\n}"],"names":["create_video_link","course_id","use_filter","ubicast_url","media_id","document","getElementById","value","media_width","media_height","media_thumb","video_url","url","window","M","cfg","wwwroot","async","insertButtonName","Promise","all","component","editor","ui","registry","addButton","icon","tooltip","onAction","courseid","usefilter","ubicastURL","panelTitle","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","formId","Date","getTime","content","Y","Node","create","responseText","set","fieldset","one","setStyle","innerHeight","windowManager","open","title","body","type","items","html","buttons","text","buttonType","onSubmit","api","video_link","insertContent","close","insert","setTimeout","mediaSelector","MediaSelector","moodleURL","nudgisURL","filterBySpeaker","target","send","insertMedia"],"mappings":"8PA2GgBA,kBAAkBC,UAAWC,WAAYC,mBAE/CC,SAAWC,SAASC,eAAe,cAAcC,MACjDC,YAAcH,SAASC,eAAe,iBAAiBC,MACvDE,aAAeJ,SAASC,eAAe,kBAAkBC,MACzDG,YAAcL,SAASC,eAAe,eAAeC,OAAS,2CAEhEI,UAAY,MACZP,YACIF,WAAY,CAEZS,UAAY,qCAAuCV,UAAY,YACzDG,SAAW,mCACXI,YAAc,aAAeC,aAFvB,YADMN,YAAcO,aAGgD,iBAC7E,OACGE,IAAM,oDAAsDX,UAAY,cAAgBG,SAC9FO,UAAY,8CACUH,YAAc,aAAeC,aADvC,mCAEEI,OAAOC,EAAEC,IAAIC,QAAUJ,IAFzB,0FAQbD,4BAnDaM,gBAEhBC,wBACMC,QAAQC,IAAI,EAClB,mBAAU,cAAeC,4BAGrBC,SAEJA,OAAOC,GAAGC,SAASC,UAAU,eAAgB,CACzCC,KAAM,OACNC,QAAST,iBACTU,SAAU,mBAlFKN,cACjBO,UAAW,wBAAYP,QACvBQ,UAAkC,OAAtB,sBAAUR,QACtBS,YAAa,0BAAcT,SAE7BU,kBACMb,QAAQC,IAAI,EAClB,mBAAU,aAAcC,qBAGtBY,MAAQ,IAAIC,eAClBD,MAAME,mBAAqB,cACC,IAApBC,KAAKC,YAAoC,MAAhBD,KAAKE,OAAgB,OAExCC,OAAS,6BAA8B,IAAIC,MAAOC,UAClDC,QAAUC,EAAEC,KAAKC,OAAOT,KAAKU,cACnCJ,QAAQK,IAAI,KAAMR,cACZS,SAAWN,QAAQO,IAAI,YACzBD,WAEAA,SAASE,SAAS,WAAY,QAC9BF,SAASE,SAAS,UAAW,QAC7BF,SAASE,SAAS,aAAc,GAAMrC,OAAOsC,cAGjD7B,OAAO8B,cAAcC,KAAK,CACtBC,MAAOtB,WACPuB,KAAM,CACFC,KAAM,QACNC,MAAO,CACH,CACID,KAAM,YACNE,KAAM,sCAIlBC,QAAS,CACL,CACIH,KAAM,SACNI,KAAM,SAEV,CACIJ,KAAM,SACNI,KAAM,OACNC,WAAY,YAGpBC,SAAWC,YACDC,WAAahE,kBAAkB6B,SAAUC,UAAWC,YAC1DT,OAAO2C,cAAcD,YACrBD,IAAIG,WAGZvB,EAAEM,IAAI,oBAAoBkB,OAAOzB,SACjC0B,YAAW,WAEPvD,OAAOwD,cAAgB,IAAIxD,OAAOyD,cAAc,CAC5CC,UAAW1D,OAAOC,EAAEC,IAAIC,QAAU,2BAA6Ba,SAC/D2C,UAAWzC,WACX0C,iBAAiB,EACjBC,OAAQnC,WAEZ1B,OAAOyD,cAAgB,GAAK,OAGxCrC,MAAMoB,KAAK,MAAOxC,OAAOC,EAAEC,IAAIC,QAAU,8CAA8C,GACvFiB,MAAM0C,OAgBkBC,CAAYtD"}